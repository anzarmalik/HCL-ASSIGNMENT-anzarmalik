<!DOCTYPE html>
<style>
 
</style>
<html>

<head>


  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title><%= title %></title>

  <link rel="stylesheet" href="/stylesheets/style.css" />
  <!-- jquery and jquery datatables cdn  -->
  <script src="https://code.jquery.com/jquery-3.3.1.js"></script>
  <script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
  <script src="https://cdn.datatables.net/1.10.20/js/dataTables.bootstrap.min.js"></script>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdn.datatables.net/1.10.20/css/dataTables.bootstrap.min.css">


  <!-- jQuery Modal Box-->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-modal/0.9.1/jquery.modal.min.js"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-modal/0.9.1/jquery.modal.min.css" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.19.0/axios.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.js"></script>

  <link rel="preconnect" href="https://cdnjs.cloudflare.com">

  <!-- font-awesome cdn -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">


</head>

<body>

  <div class="">
      <div class="row" style="margin-bottom:30px;">
          <div class="center">
            <h1>Document List</h1> 
          </div>
        </div>
    <div class="row" style="margin-bottom:30px;">
      <div style="float:right;">
        <a id="addDocumentModal" class="btn btn-primary" href="#ex1" rel="modal:open">
          Create Document
        </a>
      </div>
    </div>

    <div class="row">

      <!-- <a href="/a">aaaaaa</a> -->
      <table id="example" class="table table-striped table-bordered" style="width:100%">
        <thead>
          <tr>
            <th class="text-center">Id</th>
            <th class="text-center">Document Name</th>
            <th class="text-center">Subject</th>
            <th class="text-center">Body</th>
            <th class="text-center">View</th>
            <th class="text-center">Update</th>
            <th class="text-center">Created Date</th>
            <th class="text-center">Updated Date</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>

            </td>
            <td>

            </td>
            <td>

            </td>

          </tr>


        </tbody>

      </table>


    </div>
  </div>
  <!-- create document editor  -->

  <div id="ex1" class="modal" style="max-width: 100% ; z-index:4;">

    <div class="container">
         <div class="row" style="margin-bottom:30px;">
            <div class="center">
              <h3>Document Editor</h3> 
            </div>
          </div>


      <div class="toolbar">

        <button class="tool-items fa fa-underline" onclick="document.execCommand('underline', false, '');">
        </button>

        <button class="tool-items fa fa-italic" onclick="document.execCommand('italic', false, '');">
        </button>


        <button class="tool-items fa fa-bold" onclick="document.execCommand('bold', false, '');">
        </button>


        <button class="tool-items fa fa-scissors" onclick="document.execCommand('cut',false,'')"></button>


        <input class="tool-items fa fa-file-image-o" type="file" accept="image/*" id="file" style="display: none;"
          onchange="getImage()">

        <label for="file" class="tool-items fa fa-file-image-o"></label>

        <button class="tool-items fa fa-undo" onclick="document.execCommand('undo',false,'')"></button>

        <button class="tool-items fa fa-repeat" onclick="document.execCommand('redo',false,'')"></button>

        <button class="tool-items fa fa-strikethrough"
          onclick="document.execCommand('strikeThrough',false,'')"></button>

        <button class="tool-items fa fa-trash" onclick="document.execCommand('delete',false,'')"></button>


        <button class="tool-items fa fa-scribd" onclick="document.execCommand('selectAll',false,'')"></button>


        <!-- Jutify -->

        <button class="tool-items fa fa-align-center" onclick="document.execCommand('justifyCenter',false,'')"></button>


        <button class="tool-items fa fa-align-left" onclick="document.execCommand('justifyLeft',false,'')"></button>
        <button class="tool-items fa fa-align-right" onclick="document.execCommand('justifyRight',false,'')"></button>
      </div>

      
      <div class="center">
        <label  style="font-size: large; margin-top: 10px;"> Subject :</label>
          <div class="editorSubject" onkeypress="return (this.innerText.length <= 300)" id="editorSubject"
            contenteditable="true" spellcheck="true" style=" height: 100px;">
            <!-- <p class="editorSubjectAppend"></p> -->
  
          </div>
        </div>
      <div class="center">
          <label style="font-size: large; margin-top: 10px;"> Body :</label>
        <div class="editor" contenteditable="true" spellcheck="true">
          <!-- <p class="editorAppend"></p> -->

        </div>
      </div>


      <div class="center">
        <section class="getcontent">
        </section>
      </div>

    </div>

    <div style="float:right;">
      <button class="getHtml btn" id="addData">Add Document</button>
      <button class="getText btn " id="updateData">Update Document</button>
      <button class="btn btn-danger"><a href="#" id="close" rel="modal:close"
          style="color:#ffffff;text-decoration: none">Close</a></button>
    </div>
  </div>
  <!-- end create document editor -->
</body>


<script>

  // ------document data -----
  var btn = document.querySelector(".getHtml");
  var getText = document.querySelector(".getText");
  // var content = document.querySelector(".getcontent");
  var editorContent = document.querySelector(".editor");
  var editorContentSubject = document.querySelector(".editorSubject");




  function getImage() {
    var file = document.querySelector("input[type=file]").files[0];

    var reader = new FileReader();

    let dataURI;

    reader.addEventListener(
      "load",
      function () {
        dataURI = reader.result;

        const img = document.createElement("img");
        img.src = dataURI;
        editorContent.appendChild(img);
      },
      false
    );

    if (file) {
      
      // let files = {
      //   filename :file.name,
      // }
      // ----------file Upload---------------------
      // axios.post('/upload', files).then(function (response) {
      //   console.log(response)
      // })
      // -------------file Upload-----------------
      reader.readAsDataURL(file);
    }
  }


  $(document).ready(() => {
    // $.noConflict();

    var responseData;

    let documentTable = $('#example').DataTable({

      'processing': true,
      'serverSide': true,
      'scrollX': true,
      'scrollY': '350px',
      'scrollCollapse': true,
      "pagingType": "full_numbers",
      "bSort": false,
      "dom": 'Bfrtip',

      'ajax': {
        'url': '/service',
        'type': 'GET',
        dataFilter: function (data) {
          // console.log(data);
          json = jQuery.parseJSON(data)
          responseData = json.data
          return JSON.stringify(json)
        }
      },
      'columns': [
        { 'data': 'id' },
        { 'data': 'title' },
        { 'data': 'subjectContent' },
        { 'data': 'bodyContent' },

        {
          "render": function (data, type, full) {
            var id = "view_" + full.id;
            return '<a id=' + id +
              ' class=" fa fa-eye docView" + style="cursor: pointer"  href="#ex1" rel="modal:open"></a>';
          }
        },
        {
          "render": function (data, type, full) {
            var id = "edit_" + full.id;
            return '<a id=' + id +
              ' class=" fa fa-edit docEdit" + style="cursor: pointer"  href="#ex1" rel="modal:open"></a>';
          }
        },
        {
          "render": function (data, type, full) {
            var createdAt = moment(full.createdAt, "YYYY-MM-DDTHH:mm:ss.000Z").utcOffset("UTC+04".replace('UTC', '')).format("DD-MM-YYYY HH:mm:ss")

            return createdAt;
          }
        },
        {
          "render": function (data, type, full) {
            var updatedAt = moment(full.updatedAt, "YYYY-MM-DDTHH:mm:ss.000Z").utcOffset("UTC+04".replace('UTC', '')).format("DD-MM-YYYY HH:mm:ss")

            return updatedAt;
          }
        },
      ],
      "columnDefs": [
        { "className": "dt-center", "targets": "_all" },
        { "orderable": false, "targets": 0 }
      ],


    });



    $("#addDocumentModal").click(() => {
      $(".editor").empty()
      $(".editorSubject").empty()
      $("#addData").show()
      $("#updateData").hide()
      $(".editor").attr("contenteditable", true);
      $(".editorSubject").attr("contenteditable", true);
    })

    //  add documentation data ------
    $("#addData").click((e) => {

      
     
      let htmlBody = editorContent.innerHTML;
      let body = editorContent.textContent;
      let htmlSubject = editorContentSubject.innerHTML;
      let subject = editorContentSubject.textContent;

      let title = "Document" + Math.floor(1000 + Math.random() * 9000);
      let data = {
        htmlBodyContent: htmlBody,
        bodyContent: body,
        htmlSubjectContent: htmlSubject,
        subjectContent: subject,
        title: title
      }
      axios.post('/', data).then(function (response) {
      
        var $jq = jQuery.noConflict();
        documentTable.draw(true)
        $jq('#ex1').hide();
      })
    })


    $('#example tbody').on('click', 'tr', function () {
      clickedRowId = documentTable.row(this).index();
      
    });


    //  view document ------
    documentTable.on('click', 'a.docView', function (row) {
      $(".editor").empty()
      $(".editorSubject").empty()
      $("#addData").hide()
      $("#updateData").hide()
      var rowId = row.target.id
      selectedId = rowId.split('_')[1]

      for (var i = 0; i < responseData.length; i++) {
        if (responseData[i].id == selectedId) {
          selectedData = responseData[i];
          break;
        }
      }
     

      $(".editor").append(selectedData.htmlBodyContent)
      $(".editorSubject").append(selectedData.htmlSubjectContent)
      $(".editor").attr("contenteditable", false);
      $(".editorSubject").attr("contenteditable", false);


    })




  //  edit  document-------------
    documentTable.on('click', 'a.docEdit', function (row) {
      $(".editor").empty()
      $(".editorSubject").empty()
      $("#addData").hide()
      $("#updateData").show()

      var rowId = row.target.id
      selectedId = rowId.split('_')[1]

      for (var i = 0; i < responseData.length; i++) {
        if (responseData[i].id == selectedId) {
          selectedData = responseData[i];
          break;
        }
      }
 

      $(".editor").append(selectedData.htmlBodyContent)
      $(".editorSubject").append(selectedData.htmlSubjectContent)

      $(".editor").attr("contenteditable", true);
      $(".editorSubject").attr("contenteditable", true);

      //  update documentation data ------
      $("#updateData").click((e) => {


        let htmlBody = editorContent.innerHTML;
        let body = editorContent.textContent;
        let htmlSubject = editorContentSubject.innerHTML;
        let subject = editorContentSubject.textContent;
        let newData = {
          htmlBodyContent: htmlBody,
          bodyContent: body,
          htmlSubjectContent: htmlSubject,
          subjectContent: subject,
        }
        axios.put('/' + selectedId, newData).then(function (response) {
         
          var $jq = jQuery.noConflict();
          documentTable.draw(true)
          $jq('#ex1').hide();
        })
      })

    })
  

    $('#close,#addData,#updateData,.close-modal').on("click",function(){
     
      $(".editor").empty()
      $(".editorSubject").empty()
      
    })




  });
</script>

</html>